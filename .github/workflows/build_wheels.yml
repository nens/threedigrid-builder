name: Release

on:
  push:
    tags:
      - '*'
    pull_request:
      branches: [ master ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-2019 ] # , windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      # TODO investigate if this is necessary once we do the windows build:
      # - name: Install Visual C++ for Python 2.7
      #   if: runner.os == 'Windows'
      #   run: choco install vcpython27 -f -y

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        # to supply options, put them in 'env', like:
        env:
          CIBW_SKIP: pp*  # skips pypy
          # Use the oldest manylinux docker (with fortran compiler version GNU 4.8.2)
          # So that libquadmath and libz are not dynamically linked.
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          # Before creating the wheel, we build libthreedigrid (fortran) and copy the libraries
          # into /usr/local/bin
          CIBW_BEFORE_ALL: |
            pip install cmake &&
            ./build.sh &&
            cp -rv /project/libthreedigrid/lib/libthreedigrid*.so* /usr/local/lib/ &&
            cat WHEEL_LICENSE_LINUX >> LICENSE
          CIBW_BEFORE_ALL_WINDOWS: build.cmd && cat WHEEL_LICENSE_LINUX >> LICENSE
          CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path ${{ github.workspace }}\build\libthreedigrid -w {dest_dir} {wheel}
          CIBW_TEST_REQUIRES: pytest
          # The pytest command has the custom setting import-mode=importlib
          # so that pytest does not mess up the PATH.
          # If you do not do that, the (uncompiled) contents of
          # {package}/pygeos will be tested against instead of the
          # installed contents of the wheel that was built.
          CIBW_TEST_COMMAND: pytest --import-mode=importlib {package}/pygeos/test
          # The tests can't be done always as some dependencies (rasterio, pyproj)
          # cannot be installed inside the manylinux1 docker.
          # CIBW_TEST_EXTRAS: test,gridadmin
          # The pytest command has two custom things:
          # - --import-mode=importlib so that pytest does not mess up the PATH.
          #   If you do not do that, the (uncompiled) contents of
          #   {package}/threedigrid_builder will be tested against instead of the
          #   installed contents of the wheel that was built.
          # - We skip tests marked with 'spatialite' because we do not have the spatialite
          #   extension installed inside the manylinux docker.
          # CIBW_TEST_COMMAND: "pytest --import-mode=importlib -m 'not spatialite' {package}/threedigrid_builder/tests"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          retention-days: 5

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # Extra protection in case this github action is triggered on a PR (e.g. when
    # debugging the wheelbuilder. Only upload to PyPI on an actual tag.
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
