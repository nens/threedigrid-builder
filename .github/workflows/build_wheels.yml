name: Release

on:
  push:
    branches:
      - martijn-f2py
    tags:
      - '*'
  pull_request:  # also build on PRs touching this file
    paths:
      - ".github/workflows/build_wheels.yml"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.0
        # to supply options, put them in 'env', like:
        env:
          CIBW_SKIP: "pp* *musllinux*" # skips pypy and musllinux
          CIBW_ARCHS: auto64  # only 64-bit (convincing CMAKE of 32-bit is a TODO)
          CIBW_ENVIRONMENT_MACOS:
            F90=/usr/local/bin/gfortran-9
            LDFLAGS="-undefined dynamic_lookup -Wl,-rpath"
          CIBW_BEFORE_ALL: cat WHEEL_LICENSE_POSIX >> LICENSE
          CIBW_BEFORE_ALL_WINDOWS: cat WHEEL_LICENSE_WINDOWS >> LICENSE
          CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >-
            delvewheel repair --ignore-in-wheel -w {dest_dir} {wheel}
          CIBW_TEST_EXTRAS: test,gridadmin
          CIBW_TEST_COMMAND: pytest --pyargs threedigrid_builder
          CIBW_BUILD_VERBOSITY: 1


      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          retention-days: 5

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # Extra protection in case this github action is triggered on a PR (e.g. when
    # debugging the wheelbuilder. Only upload to PyPI on an actual tag.
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
